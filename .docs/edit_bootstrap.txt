FILE: roughup.toml
INSERT at 0:
NEW:
```toml
[walk]
ignore = ["target/**", "node_modules/**", ".git/**"]
depth = 3

[extract]
annotate = true
fence = true

[symbols]
languages = ["rust", "python"]
include_private = false

[chunk]
model = "gpt-4o"
max_tokens = 4000
overlap = 128
by_symbols = true

[apply]
engine = "auto"        # Smart fallback (internal â†’ git)
git_mode = "3way"      # Resilient apply
backup = true          # Always keep a backup
context_lines = 3
force = false          # Require explicit --force to override
whitespace = "nowarn"  # LLM-friendly whitespace handling
```

FILE: .gitignore
INSERT at 0:
NEW:
```
# Build
/target/

# Editor/OS
.DS_Store
*.swp
*.swo

# Roughup artifacts
/chunks/
/symbols.jsonl
*.rup.bak.*

# Node (if present)
/node_modules/
```

FILE: .gitattributes
INSERT at 0:
NEW:
```
* text=auto
```

FILE: .editorconfig
INSERT at 0:
NEW:
```
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 4

[*.bat]
end_of_line = crlf
```

FILE: Makefile
INSERT at 0:
NEW:
```
# Phony targets
.PHONY: init fmt lint test build release tree symbols chunk preview apply

# One-time setup (shell completions into ./completions/)
init:
	./scripts/generate-completions.sh

fmt:
	cargo fmt --all

lint:
	cargo clippy --all-targets -- -D warnings

test:
	cargo test --all

build:
	cargo build

release:
	cargo build --release

tree:
	rup tree --depth 3

symbols:
	rup symbols --languages rust,python --output symbols.jsonl

# Example chunk usage; edit input/params as needed
chunk:
	rup chunk extracted.txt --model gpt-4o --max-tokens 4000 --overlap 128

# Preview and apply any edit spec (ENV var FILE=xxx)
preview:
	rup preview $${FILE:-edit_bootstrap.txt} --context-lines 3

apply:
	rup apply $${FILE:-edit_bootstrap.txt} --apply --backup --engine auto
```

FILE: scripts/generate-completions.sh
INSERT at 0:
NEW:
```bash
#!/usr/bin/env bash
set -euo pipefail

out_dir="./completions"
mkdir -p "$out_dir"

rup completions bash --out-dir "$out_dir"
rup completions zsh  --out-dir "$out_dir"
rup completions fish --out-dir "$out_dir"

echo "Shell completions written to: $out_dir"
```

FILE: .github/workflows/ci.yml
INSERT at 0:
NEW:
```yaml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [ "stable", "1.85.0" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets -- -D warnings

      - name: Test
        run: cargo test --all --verbose
```
